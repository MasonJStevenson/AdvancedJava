package views;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

import java.awt.Dimension;
import java.util.Vector;

import javax.swing.JList;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

import model.CalcController;
import model.CalculatorPlugin;

import java.io.*;
import java.lang.reflect.Constructor;



//import plugins.RomanPlugin;
import plugins.*;

import java.awt.Color;

import javax.swing.border.LineBorder;

/**
 * For a plugin to work in eclipse, its .java file must be located in src/plugins
 * and its .CLASS files must be located in bin/plugins.
 * @author MasonS
 * @version 1.0
 */
public class LayoutSelector extends JScrollPane
{
    private String[] tempItems = {"Default", "Roman"};
    private JList list;
    private GUI parent;
    
    /**
     * Constructor for the LayoutSelector class.
     * @param newParent The parent gui.
     */
    public LayoutSelector(GUI newParent)
    {
        //AUTO GENERATED BY WINDOWBUILDER PRO FOR ECLIPSE
        parent = newParent;
        
        setPreferredSize(new Dimension(200, 200));
        
        list = new JList(getPluginList());
        list.setBorder(new LineBorder(new Color(0, 0, 0), 2, true));
        list.setBackground(new Color(30, 144, 255));
        list.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        list.setVisibleRowCount(4);
        setViewportView(list);
        
        list.addListSelectionListener(new LayoutListener());
        
        //set default to selected
        list.setSelectedIndex(0);
    }
    
    private Vector<String> getPluginList()
    {
        Vector<String> plugins = new Vector<String>();
        File folder = new File("plugins");
        
        plugins.add("Default");
        
        //loop through plugin files
        for (File file : folder.listFiles())
        {
            //check for valid plugin name
            if (file.getName().matches("[a-zA-Z]+Plugin.java"))
            {
                plugins.add(file.getName().replace("Plugin.java", ""));
            }
        }
        
        return plugins;
    }
    
    /**
     * Custom listener for LayoutSelector.
     */
    private class LayoutListener implements ListSelectionListener
    {

        @Override
        public void valueChanged(ListSelectionEvent event)
        {
            String temp;
            Class<CalculatorPlugin> newClass;
            //Class newClass;
            CalculatorPlugin plugin;
            Constructor<CalculatorPlugin> con;
            
            //this statement makes sure that valueChanged only happens once
            if (!event.getValueIsAdjusting())
            {
                //check for default 
                if (list.getSelectedValue().equals("Default"))
                {
                    parent.loadDefault();
                }
                
                //plugin selected
                else
                {
                    temp = (String) list.getSelectedValue();
                    
                    try
                    {
                        newClass = (Class<CalculatorPlugin>) Class.forName(
                            "plugins." + temp + "Plugin");
                            
                        //newClass = Class.forName(
                            //"plugins." + temp + "Plugin");    
                        con = newClass.getConstructor(
                            new Class[]{CalcController.class});
                            
                        //plugin = ((CalculatorPlugin) newClass.newInstance());
                        plugin = con.newInstance(parent.getController());
                        parent.loadPlugin(plugin);
                        //plugin.setController(parent.getController());
                    } 
                    
                    catch (Exception e)
                    {
                        e.printStackTrace();
                    }
                }
            }
        }
    }
}
