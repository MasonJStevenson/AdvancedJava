#BlueJ class context
comment0.params=newShip
comment0.target=ShortRangeScanner(starships.Starship)
comment0.text=\r\n\ Constructor\ for\ ShortRangeScanner\r\n\ \r\n\ @param\ newShip\ a\ reference\ to\ this\ module's\ ship.\r\n
comment1.params=commands
comment1.target=java.lang.String\ launch(java.lang.String[])
comment1.text=\r\n\ Scans\ an\ (8\ Sector)\ X\ (8\ Sector)\ area\ of\ space.\r\n\ prints\ out\ some\ ship\ data.\r\n\ \r\n\ @param\ commands\ a\ list\ of\ commands\ for\ this\ module.\r\n\ @return\ returns\ the\ log.\r\n
comment2.params=
comment2.target=boolean\ checkForDock()
comment2.text=\r\n\ \ \ \ private\ void\ printInfo(int\ row,\ String\ condition)\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ //row\ 1\r\n\ \ \ \ \ \ \ \ if\ (row\ \=\=\ kOne)\r\n\ \ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ print(String.format("\ \ \ \ Stardate\ \ \ \ \ \ \ \ \ \ \ \ %d\\n",\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (int)\ ship.getGalaxy().getTime().getCurrent()));\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ //row\ 2\r\n\ \ \ \ \ \ \ \ else\ if\ (row\ \=\=\ kTwo)\r\n\ \ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ print(String.format("\ \ \ \ Condition\ \ \ \ \ \ \ \ \ \ \ %s\\n",\ condition));\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ //row\ 3\r\n\ \ \ \ \ \ \ \ else\ if\ (row\ \=\=\ kThree)\r\n\ \ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ print(String.format("\ \ \ \ Quadrant\ \ \ \ \ \ \ \ \ \ \ \ %d,\ %d\\n",\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ship.getQuadrantRow(),\ ship.getQuadrantCol()));\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ //row\ 4\r\n\ \ \ \ \ \ \ \ else\ if\ (row\ \=\=\ kFour)\r\n\ \ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ print(String.format("\ \ \ \ Sector\ \ \ \ \ \ \ \ \ \ \ \ \ \ %d,\ %d\\n",\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ SpaceMath.cint(ship.getSectorRow()),\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ SpaceMath.cint(ship.getSectorCol())));\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ //row\ 5\ Note\:\ will\ only\ print\ out\ if\ the\ ship\ has\ the\ proper\ \r\n\ \ \ \ \ \ \ \ //designation.\ This\ is\ to\ avoid\ a\ runtime\ casting\ exception\r\n\ \ \ \ \ \ \ \ else\ if\ (row\ \=\=\ kFive)\r\n\ \ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ //If\ the\ ship\ is\ a\ constitution-class\ starship\r\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (ship.getDesignation()[0].equals("Constitution"))\r\n\ \ \ \ \ \ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ print(String.format("\ \ \ \ Photon\ Torpedoes\ \ \ \ %d\\n",\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ((Enterprise)ship).getTorpedos()));\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ //row\ 6\r\n\ \ \ \ \ \ \ \ else\ if\ (row\ \=\=\ kSix)\r\n\ \ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ print(String.format("\ \ \ \ Total\ Energy\ \ \ \ \ \ \ \ %d\\n",\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ship.getEnergy()\ +\ ship.getShields()));\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ //row\ 7\r\n\ \ \ \ \ \ \ \ else\ if\ (row\ \=\=\ kSeven)\r\n\ \ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ print(String.format("\ \ \ \ Shields\ \ \ \ \ \ \ \ \ \ \ \ \ %d\\n",\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ship.getShields()));\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ //row\ 8\r\n\ \ \ \ \ \ \ \ else\ if\ (row\ \=\=\ kEight)\r\n\ \ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ print(String.format("\ \ \ \ Klingons\ Remaining\ \ %d\\n",\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ship.getGalaxy().getTotalEnemies()));\r\n\ \ \ \ \ \ \ \ }\r\n}
comment3.params=
comment3.target=boolean\ isDamaged()
comment3.text=\r\n\ Checks\ to\ see\ if\ this\ system\ is\ operable.\r\n\ @return\ returns\ true\ if\ this\ system\ is\ not\ operational.\r\n\ (damage\ value\ less\ than\ 0.0)\r\n
numComments=4
