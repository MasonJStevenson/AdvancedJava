#BlueJ class context
comment0.params=newEnemy\ newBase\ newStar\ newGal\ newSupernova
comment0.target=Quadrant(int,\ int,\ int,\ Galaxy,\ boolean)
comment0.text=\r\n\ Constructor\ for\ Quadrant.\r\n\ \r\n\ @param\ newEnemy\ The\ number\ of\ enemies\ in\ this\ quadrant.\r\n\ @param\ newBase\ The\ number\ of\ bases\ in\ this\ quadrant.\r\n\ @param\ newStar\ The\ number\ of\ stars\ in\ this\ quadrant.\r\n\ @param\ newGal\ The\ Galaxy\ that\ contains\ this\ quadrant.\r\n\ @param\ newSupernova\ Does\ this\ quadrant\ have\ a\ supernova?\r\n
comment1.params=ship
comment1.target=java.lang.String\ generate(starships.Starship)
comment1.text=\r\n\ HAPPENS\ WHEN\ A\ SHIP\ ENTERS\ THIS\ QUADRANT.\r\n\ \r\n\ @param\ ship\ the\ ship\ in\ this\ quadrant\r\n\ @return\ returns\ the\ log.\r\n
comment10.params=
comment10.target=void\ genStars()
comment11.params=
comment11.target=boolean\ hasSupernova()
comment11.text=\r\n\ Checks\ this\ quadrant\ for\ a\ supernova.\r\n\ @return\ returns\ true\ if\ this\ quadrant\ contains\ a\ supernova.\r\n
comment12.params=
comment12.target=int[][]\ getEnemyData()
comment12.text=\r\n\ Accessor\ for\ enemyData.\r\n\ @return\ returns\ enemyData.\r\n
comment13.params=row\ col
comment13.target=boolean\ checkEmpty(int,\ int)
comment13.text=\r\n\ Checks\ a\ space\ to\ see\ if\ it\ is\ empty.\r\n\ @param\ row\ the\ row\ index.\r\n\ @param\ col\ the\ collumn\ index.\ \r\n\ @return\ returns\ true\ if\ the\ space\ is\ empty.\r\n
comment14.params=
comment14.target=double\ getRepairDuration()
comment14.text=\r\n\ Accessor\ for\ repairDuration.\r\n\ @return\ returns\ repairDuration.\r\n
comment15.params=
comment15.target=int\ getBaseRow()
comment15.text=\r\n\ Accessor\ for\ baseRow.\r\n\ @return\ returns\ baseRow.\r\n
comment16.params=
comment16.target=int\ getBaseCol()
comment16.text=\r\n\ Accessor\ for\ baseCol.\r\n\ @return\ returns\ baseCol.\r\n
comment17.params=
comment17.target=int\ getEnemyNum()
comment17.text=\r\n\ Accessor\ for\ enemyNum.\r\n\ @return\ returns\ enemyNum.\r\n
comment18.params=row\ col
comment18.target=void\ enemyDestroyed(int,\ int)
comment18.text=\r\n\ Removes\ an\ enemy\ located\ at\ row,\ col\ from\ the\ quadrant.\r\n\ Note\ that\ enemyData\ still\ contains\ information\ about\ the\ enemy\r\n\ and\ may\ need\ to\ be\ wiped\ as\ well.\r\n\ \r\n\ @param\ row\ The\ row\ index.\r\n\ @param\ col\ The\ collumn\ index.\r\n
comment19.params=
comment19.target=int\ getBaseNum()
comment19.text=\r\n\ Accessor\ for\ baseNum.\r\n\ @return\ returns\ baseNum.\r\n
comment2.params=row\ col
comment2.target=void\ genName(int,\ int)
comment2.text=\r\n\ Generates\ this\ quadrant's\ name.\r\n\ @param\ row\ The\ row\ index\ of\ this\ quadrant.\r\n\ @param\ col\ The\ collumn\ index\ of\ this\ quadrant.\r\n
comment20.params=row\ col
comment20.target=void\ baseDestroyed(int,\ int)
comment20.text=\r\n\ Removes\ an\ starbase\ located\ at\ row,\ col\ from\ the\ quadrant.\r\n\ \r\n\ @param\ row\ The\ row\ index.\r\n\ @param\ col\ The\ collumn\ index.\r\n
comment21.params=
comment21.target=int\ getStarNum()
comment21.text=\r\n\ Accessor\ for\ starNum.\r\n\ @return\ returns\ starNum.\r\n
comment22.params=
comment22.target=java.lang.String\ getName()
comment22.text=\r\n\ Accessor\ for\ name.\r\n\ @return\ returns\ name.\r\n
comment23.params=
comment23.target=SectorObject[][]\ getSectors()
comment23.text=\r\n\ Accessor\ for\ sectors.\r\n\ @return\ returns\ sectors.\r\n
comment24.params=row\ col
comment24.target=SectorObject\ getSector(int,\ int)
comment24.text=\r\n\ Accessor\ for\ a\ single\ sector.\r\n\ @param\ row\ The\ row\ index.\r\n\ @param\ col\ The\ collumn\ index.\r\n\ @return\ returns\ returns\ sector\ at\ [row][col].\r\n
comment25.params=newNum
comment25.target=void\ setEnemyNum(int)
comment25.text=\r\n\ Mutator\ method\ for\ enemyNum.\r\n\ @param\ newNum\ the\ number\ of\ enemies\ for\ this\ qudrant.\r\n
comment26.params=newNum
comment26.target=void\ setBaseNum(int)
comment26.text=\r\n\ Mutator\ method\ for\ baseNum.\r\n\ @param\ newNum\ the\ number\ of\ starbases\ for\ this\ qudrant.\r\n
comment27.params=newNum
comment27.target=void\ setStarNum(int)
comment27.text=\r\n\ Mutator\ method\ for\ starNum.\r\n\ @param\ newNum\ the\ number\ of\ stars\ for\ this\ qudrant.\r\n
comment28.params=
comment28.target=int\ toInt()
comment28.text=\r\n\ Formats\ quadrant\ data\ into\ xyz\ format,\ where\ x\ is\ the\r\n\ number\ of\ enemies,\ y\ is\ the\ number\ of\ starbases,\ and\ \r\n\ z\ is\ the\ number\ of\ stars.\ e.g.\ a\ base\ with\ format\r\n\ 205\ has\ 2\ enemy\ ships,\ 0\ starbases,\ and\ 5\ stars.\r\n\ \r\n\ @return\ Returns\ an\ int\ of\ format\ xyz.\r\n
comment29.params=
comment29.target=java.lang.String\ toString()
comment29.text=\r\n\ Same\ as\ toInt()\ just\ in\ string\ form.\r\n\ Takes\ supernovas\ into\ account.\r\n\ \r\n\ @return\ returns\ the\ string\ representation\ of\ this\ quadrant.\r\n
comment3.params=ship
comment3.target=java.lang.String\ enemiesMove(starships.Starship)
comment3.text=\r\n\ Moves\ an\ enemy.\ Then\ it\ shoots.\r\n\ @param\ ship\ The\ player's\ ship.\r\n\ @return\ returns\ the\ log.\r\n
comment4.params=ship
comment4.target=java.lang.String\ enemiesShoot(starships.Starship)
comment4.text=\r\n\ Enemy\ shoots\ at\ player.\r\n\ @param\ ship\ The\ player\ ship.\r\n\ @return\ returns\ the\ log.\r\n
comment5.params=row\ targetRow\ targetCol
comment5.target=int\ calculateDamage(int,\ double,\ double)
comment6.params=
comment6.target=void\ genSpace()
comment7.params=shipRow\ shipCol
comment7.target=void\ genShip(int,\ int)
comment8.params=
comment8.target=void\ genEnemies()
comment9.params=
comment9.target=void\ genBases()
numComments=30
